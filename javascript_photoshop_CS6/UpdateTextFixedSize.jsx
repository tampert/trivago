/** * Created by Dirk Soentjens on 16/03/15. * This script will update all the text fields with content given in the XML file * reference file : http://objjob.phrogz.net/pshop/object/327 */var allTextLayers = [];var theLayers = null;//collectAllLayers(app.activeDocument);// first iterate thru the whole file and grap all the layersfunction collectAllLayers (theParent){    var layerSets = [theParent];              while (layerSets.length > 0) {        var currentSet = layerSets.shift();        var subSets = collectLayersIn(currentSet);        layerSets = layerSets.concat(subSets);    }}function collectLayersIn(parent) {    var result = [];    for (var m = parent.layers.length - 1; m >= 0; m--)    {        var theLayer = parent.layers[m];        if (theLayer.kind == LayerKind.TEXT){             allTextLayers.push(theLayer);        }            if (theLayer.typename === "LayerSet")        {            result.push(theLayer);        }    }    return result;}function updateText(nameTextField, newText){         var layerLength = allTextLayers.length;    for(var i=0;i<layerLength;i++) {        for (var a = 0; a < layerLength; a++) {           var curLayer =  allTextLayers[i];           if (curLayer.name.toString() == nameTextField) {               //http://graphicdesign.stackexchange.com/questions/18381/photoshop-cs6-get-width-of-paragraph-text-in-pixels-by-script                   curLayer.textItem.kind = TextType.PARAGRAPHTEXT;               MakeTextFit(curLayer, newText );               curLayer.textItem.contents = newText;            }          }    }}function reduceFontSize(layer){    var curLayer = layer;    curLayer.TextItem.size = 14;    return curLayer;}function getAverageCharWidth(fontsize){    var width = 0;    if(fontsize >= 30){        width = 25;    }else if((fontsize < 30) && (fontsize > 24)){        width = 21;    }else if((fontsize <= 24) && (fontsize > 18)){        width = 16;    }else if((fontsize <= 18) && (fontsize > 14)){        width = 12;    }else{        width = 9;    }    return width;}// http://html5hub.com/ellipse-my-text/function shorten(text, maxLength) {    var ret = text;    if (ret.length > maxLength) {        ret = ret.substr(0,maxLength-3) + "...";    }    return ret;}function main() {    //Check if a document is open    if (!documents.length) return;        var originalUnit = preferences.rulerUnits;    // this can go wrong maybe when preference is not set to pixels    preferences.rulerUnits = Units.PIXELS;    try {        theLayers = collectAllLayers(app.activeDocument);        var f = new File('~/Desktop/fixed_text.xml');        f.open('r');        var xml = new XML( f.read() );        f.close();                var maxStringLength = 1000;            var long_text = shorten(xml.child(0).toString(), maxStringLength);        var short_text = xml.child(1).toString();                  updateText("top_text" ,long_text);       // updateText("middle_text" ,short_text)    }    catch (e) {    }    preferences.rulerUnits = originalUnit;}main();function MakeTextFit(layer, newText){    var box_width = layer.textItem.width,         font_size_points = layer.textItem.size,                  text_length = newText.length,        total_width_text = getAverageCharWidth(font_size_points) * text_length;     //$.writeln(layer.textItem.size);     if(total_width_text > box_width){        //make fontsize smaller , re-calculate width        layer.textItem.size --;                //exit loop if font size is smaller then 11 px        if( layer.textItem.size.toString() === "10 px")          return;                  MakeTextFit(layer, newText);    }    return;}